# Base image
FROM i386/debian:trixie

ENV DEBIAN_FRONTEND=noninteractive

RUN echo "deb http://deb.debian.org/debian bookworm main contrib non-free non-free-firmware" > /etc/apt/sources.list && \
    echo "deb-src http://deb.debian.org/debian bookworm main contrib non-free non-free-firmware" >> /etc/apt/sources.list && \
    echo "deb http://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware" >> /etc/apt/sources.list && \
    echo "deb-src http://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware" >> /etc/apt/sources.list && \
    echo "deb http://deb.debian.org/debian bookworm-updates main contrib non-free non-free-firmware" >> /etc/apt/sources.list && \
    echo "deb-src http://deb.debian.org/debian bookworm-updates main contrib non-free non-free-firmware" >> /etc/apt/sources.list && \
    apt update && apt install -y wget gpg

RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | gpg --dearmor -o /etc/apt/trusted.gpg.d/llvm.gpg && \
    echo "deb http://apt.llvm.org/bookworm/ llvm-toolchain-bookworm-17 main" >> /etc/apt/sources.list && \
    apt update

RUN apt build-dep mesa -y && \
        apt install -y \
        git \
        build-essential \
        glslang-tools \
        libelf-dev \
        liblua5.4-dev \
        libclang-17-dev \
        clang-17 \
        clang-tools-17 \
        libclang-17-dev \
        llvm-17-dev \
        libclc-19-dev \
        libclang-cpp19 \
        libudev-dev \
        libvdpau1 \
        libunwind-dev \
        libllvmspirvlib-19-dev \
        bindgen \
        meson \
        xutils-dev \
        ninja-build \
        python3-pip \
        python3-setuptools \
        python3-mako \
        libdrm-dev \
        libgbm-dev \
        libegl-dev \
        libgles2-mesa-dev \
        libwayland-dev \
        libwayland-egl-backend-dev \
        wayland-protocols \
        libxcb-randr0-dev \
        xorg-dev \
        xserver-xorg-dev \
        libpciaccess-dev \
        autoconf \
        automake \
        libtool \
        cmake \
        g++ \
        pkg-config \
        zstd

# Build SPIRV-Tools
RUN git clone https://github.com/KhronosGroup/SPIRV-Tools.git --recursive && \
    cd SPIRV-Tools && \
    python3 utils/git-sync-deps && \
    mkdir build && cd build && \
    cmake .. -DCMAKE_BUILD_TYPE=Release && \
    make -j$(nproc) && \
    make install

# Set up build directory for mesa
WORKDIR ~/mesa

RUN mkdir build32 && \
    meson setup build32 --buildtype=release -Dprefix=/usr -Dplatforms=x11,wayland -Dvulkan-drivers=amd,swrast,virtio -Dshader-cache=enabled -Dshader-cache-max-size=8G -Dvulkan-layers=device-select,overlay,screenshot -Dgallium-extra-hud=true -Dgallium-drivers=radeonsi,r600,zink,virgl,softpipe,llvmpipe -Dopengl=true -Dgles1=enabled -Dgles2=enabled -Degl=enabled -Dllvm=enabled -Dlmsensors=enabled -Dglx=dri -Dtools=glsl,nir -Dgallium-vdpau=enabled -Dgallium-va=enabled -Dglvnd=enabled -Dgbm=enabled -Dlibunwind=enabled -Dosmesa=true -Dgallium-nine=true -Dvideo-codecs=vc1dec,h264dec,h264enc,h265dec,h265enc,av1dec,av1enc,vp9dec -Dlegacy-x11=dri2 -Dteflon=true -Dzstd=enabled -Dshared-glapi=enabled -Dmicrosoft-clc=disabled -Dvalgrind=disabled && \
    meson configure build32 && \
    ninja -C build32 && \
    DESTDIR="$PWD/package-root" ninja -C build32 install

# Set up build directory for libdrm
WORKDIR ~/libdrm

RUN mkdir build32 && \
    meson setup build32 -Dsysconfdir=/etc -Dprefix=/usr --buildtype plain -Dudev=false -Dvalgrind=disabled -Dintel=enabled && \
    meson configure build32 && \
    ninja -C build32 && \
    DESTDIR="$PWD/package-root" ninja -C build32 install
