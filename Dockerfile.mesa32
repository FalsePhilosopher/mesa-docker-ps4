# Base image
FROM i386/ubuntu:24.04

ENV DEBIAN_FRONTEND=noninteractive

RUN source /etc/os-release
    echo "deb-src http://azure.archive.ubuntu.com/ubuntu $VERSION_CODENAME main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
    echo "deb-src http://azure.archive.ubuntu.com/ubuntu $VERSION_CODENAME-updates main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
    echo "deb-src http://security.ubuntu.com/ubuntu $VERSION_CODENAME-security main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
    apt update
    apt build-dep mesa -y \
    apt install -y \
    git \
    build-essential \
    glslang-tools \
    libelf-dev \
    liblua5.4-dev \
    libclang-17-dev \
    clang-tools-17 \
    libclc-19-dev \
    libclang-17-dev \
    libclang-cpp19 \
    libudev-dev \
    libvdpau1 \
    libunwind-dev \
    llvm-17-dev \
    llvm-spirv-17 \
    spirv-tools \
    libllvmspirvlib-19-dev \
    bindgen \
    meson-1.5 \
    xutils-dev \
    ninja-build \
    python3-pip \
    python3-setuptools \
    python3-mako \
    libdrm-dev \
    libgbm-dev \
    libegl-dev \
    libgles2-mesa-dev \
    libwayland-dev \
    libwayland-egl-backend-dev \
    wayland-protocols \
    libxcb-randr0-dev \
    xorg-dev \
    xserver-xorg-dev \
    libpciaccess-dev \
    autoconf \
    automake \
    libtool \
    cmake \
    git \
    g++ \
    pkg-config \
    zstd
    
RUN git clone https://github.com/KhronosGroup/SPIRV-Tools.git --recursive
    cd SPIRV-Tools
    python3 utils/git-sync-deps
    mkdir build && cd build
    cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$HOME/spirv-tools-install
    make -j$(nproc)
    make install

WORKDIR ~/mesa

RUN mkdir build32
    meson setup build64 --buildtype=release -Dprefix=/usr -Dplatforms=x11,wayland -Dvulkan-drivers=amd,swrast,virtio -Dshader-cache=enabled -Dshader-cache-max-size=8G -Dvulkan-layers=device-select,overlay,screenshot -Dgallium-extra-hud=true -Dgallium-drivers=radeonsi,r600,zink,virgl,softpipe,llvmpipe -Dopengl=true -Dgles1=enabled -Dgles2=enabled -Degl=enabled -Dllvm=enabled -Dlmsensors=enabled -Dglx=dri -Dtools=glsl,nir -Dgallium-vdpau=enabled -Dgallium-va=enabled -Dglvnd=enabled -Dgbm=enabled -Dlibunwind=enabled -Dosmesa=true -Dgallium-nine=true -Dvideo-codecs=vc1dec,h264dec,h264enc,h265dec,h265enc,av1dec,av1enc,vp9dec -Dlegacy-x11=dri2 -Dteflon=true -Dzstd=enabled -Dshared-glapi=enabled -Dmicrosoft-clc=disabled -Dvalgrind=disabled
    meson configure build32
    ninja -C build32
    DESTDIR="$PWD/package-root" ninja -C build32 install
    
WORKDIR ~/libdrm

RUN mkdir build32
    meson setup build32 -Dsysconfdir=/etc -Dprefix=/usr --buildtype plain -Dudev=false -D valgrind=disabled -D intel=enabled
    meson configure build32
    ninja -C build32
    DESTDIR="$PWD/package-root" ninja -C build32 install