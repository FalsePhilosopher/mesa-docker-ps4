# Base image
FROM i386/debian:trixie

ENV DEBIAN_FRONTEND=noninteractive

RUN echo "deb-src http://deb.debian.org/debian trixie main contrib non-free non-free-firmware" >> /etc/apt/sources.list && \
    echo "deb-src http://security.debian.org/debian-security trixie-security main contrib non-free non-free-firmware" >> /etc/apt/sources.list && \
    echo "deb-src http://deb.debian.org/debian trixie-updates main contrib non-free non-free-firmware" >> /etc/apt/sources.list && \
    apt update && apt install -y wget gpg

RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | gpg --dearmor -o /etc/apt/trusted.gpg.d/llvm.gpg && \
    echo "deb http://apt.llvm.org/bookworm/ llvm-toolchain-bookworm-17 main" >> /etc/apt/sources.list && \
    apt update

RUN apt build-dep mesa -y && \
        apt install -y \
        git \
        build-essential \
        glslang-tools \
        libelf-dev \
        liblua5.4-dev \
        libclang-17-dev \
        clang-17 \
        clang-tools-17 \
        libclang-17-dev \
        llvm-17-dev \
        libclc-19-dev \
        libclang-cpp19 \
        libudev-dev \
        libvdpau1 \
        libunwind-dev \
        libllvmspirvlib-19-dev \
        bindgen \
        meson \
        xutils-dev \
        ninja-build \
        python3-pip \
        python3-setuptools \
        python3-mako \
        libdrm-dev \
        libgbm-dev \
        libegl-dev \
        libgles2-mesa-dev \
        libwayland-dev \
        libwayland-egl-backend-dev \
        wayland-protocols \
        libxcb-randr0-dev \
        xorg-dev \
        xserver-xorg-dev \
        libpciaccess-dev \
        autoconf \
        automake \
        libtool \
        cmake \
        g++ \
        pkg-config \
        zstd

RUN mkdir -p spirv-tools-32 && \
    cd spirv-tools-32 && \
    if [ ! -d build ]; then
    RUN git clone https://github.com/KhronosGroup/SPIRV-Tools.git --recursive . && \
    git submodule update --init && \
    python3 utils/git-sync-deps && \
    mkdir build && cd build && \
    cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release && \
    make -j$(nproc) && \
    make install && \
    else
    RUN echo "Using cached SPIRV-Tools build"
    fi
