name: Build lib32Mesa on alpine docker

on:
  workflow_dispatch:

jobs:
  cache-mesa:
    runs-on: ubuntu-latest
    name: Cache mesa/libdrm

    steps:
      - name: Fetch latest release tags
        id: fetch-latest-release
        run: |
          latest_tag=$(curl -s "https://gitlab.freedesktop.org/api/v4/projects/176/repository/tags" | jq -r '.[0].name')
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
          latestdrm_tag=$(curl -s "https://gitlab.freedesktop.org/api/v4/projects/177/repository/tags" | jq -r '.[0].name')
          echo "LATESTDRM_TAG=$latestdrm_tag" >> $GITHUB_ENV

      - name: Cache Mesa repository
        id: cache-mesa
        uses: actions/cache@v4
        with:
          path: ./mesa
          key: ${{ env.LATEST_TAG }}

      - name: Clone Mesa repository if not cached
        if: steps.cache-mesa.outputs.cache-hit != 'true'
        run: |
          curl -L "https://gitlab.freedesktop.org/mesa/mesa/-/archive/${{ env.LATEST_TAG }}/${{ env.LATEST_TAG }}.tar.gz" | tar -xzvf -
          mv mesa-* mesa

      - name: Cache libdrm repository
        id: cache-libdrm
        uses: actions/cache@v4
        with:
          path: ./libdrm
          key: ${{ env.LATESTDRM_TAG }}

      - name: Clone libdrm repository if not cached
        if: steps.cache-libdrm.outputs.cache-hit != 'true'
        run: |
         curl -L "https://gitlab.freedesktop.org/mesa/drm/-/archive/${{ env.LATESTDRM_TAG }}/drm-${{ env.LATESTDRM_TAG }}.tar.gz" | tar -xzvf -
         mv drm-${{ env.LATESTDRM_TAG }} libdrm

  build-lib32mesa-ps4:
    needs: cache-mesa
    runs-on: ubuntu-latest
    name: Build Mesa and Components for PS4

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
            sudo apt install -y \
            autoconf \
            automake \
            libtool \
            zstd

      - name: Fetch latest release tags
        id: fetch-latest-release
        run: |
          latest_tag=$(curl -s "https://gitlab.freedesktop.org/api/v4/projects/176/repository/tags" | jq -r '.[0].name')
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
          latestdrm_tag=$(curl -s "https://gitlab.freedesktop.org/api/v4/projects/177/repository/tags" | jq -r '.[0].name')
          echo "LATESTDRM_TAG=$latestdrm_tag" >> $GITHUB_ENV

      - name: Restore Mesa repository cache
        id: restore-mesa
        uses: actions/cache@v4
        with:
          path: ./mesa
          key: ${{ env.LATEST_TAG }}

      - name: Restore libdrm repository cache
        id: restore-libdrm
        uses: actions/cache@v4
        with:
          path: ./libdrm
          key: ${{ env.LATESTDRM_TAG }}

      - name: Cache docker image
        id: cache-docker
        uses: actions/cache@v4
        with:
          path: docker.zst
          key: docker-alpine


      - name: Copy patches
        working-directory: ./patches
        run: |
          cp mesa.patch ../mesa
          cp libdrm.patch ../libdrm

      - name: Patch Mesa
        working-directory: ./mesa
        run: |
          patch  -Np1 < mesa.patch

      - name: Patch libdrm
        working-directory: ./libdrm
        run: |
          patch  -Np1 < libdrm.patch

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Load docker image from cache
        if: steps.cache-docker.outputs.cache-hit == 'true'
        run: |
          zstd -T0 -d docker.zst -c | docker load

      - name: Build 32-bit Docker container if not cached
        if: steps.cache-docker.outputs.cache-hit != 'true'
        run: |
          docker build -t mesa32 -f Dockerfile.alpine .
          docker save mesa32 | zstd -19 -T0 > docker.zst


