name: Build Mesa on Ubuntu

on:
  workflow_dispatch:

jobs:
  build-mesa-ps4:
    name: Build Mesa and Components for PS4
    runs-on: ubuntu-latest

    steps:
    
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            glslang-tools \
            clang-19 \
            clang-tools-19 \
            libclc-19-dev \
            libclang-19-dev \
            libclang-cpp19 \
            libudev-dev \
            libvdpau1 \
            llvm-19-dev \
            llvm-spirv-19 \
            libllvmspirvlib-17-dev \
            bindgen \
            meson \
            ninja-build \
            python3-pip \
            python3-setuptools \
            python3-mako \
            libdrm-dev \
            libgbm-dev \
            libegl-dev \
            libgles2-mesa-dev \
            libwayland-dev \
            wayland-protocols \
            xorg-dev \
            xserver-xorg-dev \
            libpciaccess-dev \
            autoconf \
            automake \
            libtool

      - name: Clone Mesa
        run: |
          git clone --recursive https://gitlab.freedesktop.org/mesa/mesa.git
          cd mesa
          # Fetch the latest Mesa release tag
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          git checkout $latest_tag

      - name: Copy patch
        working-directory: ./patches
        run: |
          cp mesa.patch ../mesa
          cp libdrm.patch ../mesa/libdrm
          cp xf86-video-amdgpu.patch ../mesa

# Removed patch  -Np1 < mesa.patch for now
      - name: Build Mesa
        working-directory: ./mesa
        run: |
          mkdir build64
          meson setup build64
          ninja -C build64
          
      - name: Build and install libdrm
        working-directory: ./mesa
        run: |
          cd libdrm
          patch  -Np1 < libdrm.patch
          .meson setup build64 \
          --prefix /usr \
          --libdir x86_64 \
          --buildtype plain \
          --wrap-mode      nofallback \
          -D udev=false \
          -D valgrind=disabled \
          -D intel=enabled
          ninja -C build64

      # Step 7: Build xf86-video-amdgpu for PS4
      #- name: Build xf86-video-amdgpu
       # run: |
        #  patch  -Np1 < ../patches/xf86-video-amdgpu.patch
         # cd xf86-video-amdgpu
          #./autogen.sh --prefix=/usr
          #make
          #sudo make install
          #cd ../..
